{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullStackProjects\\\\CarCompanyBilling\\\\car-company-billing\\\\src\\\\pages\\\\Employee\\\\Employee.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useData } from \"../../provider/DataProvider\";\nimport { Table, Button, Spin } from \"antd\";\nimport { Spinner } from \"../../components\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Employee = () => {\n  _s();\n  const [employees, setEmployees] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    getEmployees\n  } = useData();\n  const getEmployee = async () => {\n    setIsLoading(true);\n    var lst = await getEmployees();\n    setEmployees(lst);\n    setIsLoading(false);\n    console.log(employees, \"invoices\", lst);\n  };\n  function capitalizeFirstLetter(str) {\n    return str[0].toUpperCase() + str.slice(1);\n  }\n  function capitalizeWords(sentence) {\n    const words = sentence.split(\" \");\n    const capitalizedWords = words.map(word => capitalizeFirstLetter(word));\n    const reassembed = capitalizedWords.join(\" \");\n    return reassembed;\n  }\n  const columns = [{\n    title: \"Employee Id\",\n    dataIndex: \"employeeId\",\n    key: \"employeeId\"\n  }, {\n    title: \"Name\",\n    key: \"name\",\n    render: rec => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: rec.firstName.charAt(0).toUpperCase() + rec.firstName.slice(1) + \" \" + rec.lastName.charAt(0).toUpperCase() + rec.lastName.slice(1)\n    }, void 0, false)\n  }, {\n    title: \"Birthday\",\n    dataIndex: \"birthDate\",\n    key: \"birthDate\"\n  }, {\n    title: \"SIN\",\n    dataIndex: \"socSecNo\",\n    key: \"socSecNo\"\n  }, {\n    title: \"Hire Date\",\n    dataIndex: \"hireDate\",\n    key: \"hireDate\"\n  }, {\n    title: \"Salary\",\n    dataIndex: \"salary\",\n    key: \"salary\"\n  }, {\n    title: \"Bonus\",\n    dataIndex: \"bonus\",\n    key: \"bonus\"\n  }, {\n    title: \"Commission\",\n    dataIndex: \"commission\",\n    key: \"commission\"\n  }];\n  useEffect(() => {\n    getEmployee();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"5px\"\n      },\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: \"600\",\n            fontSize: \"18px\"\n          },\n          children: \"Employee Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: employees,\n            columns: columns,\n            loading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Employee, \"ueAht/tgCh/VFDGKRNBnf8BRQ58=\", false, function () {\n  return [useData];\n});\n_c = Employee;\nexport default Employee;\nvar _c;\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"names":["useEffect","useState","useData","Table","Button","Spin","Spinner","Fragment","_Fragment","jsxDEV","_jsxDEV","Employee","_s","employees","setEmployees","isLoading","setIsLoading","getEmployees","getEmployee","lst","console","log","capitalizeFirstLetter","str","toUpperCase","slice","capitalizeWords","sentence","words","split","capitalizedWords","map","word","reassembed","join","columns","title","dataIndex","key","render","rec","children","firstName","charAt","lastName","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","fontSize","marginTop","dataSource","loading","_c","$RefreshReg$"],"sources":["D:/fullStackProjects/CarCompanyBilling/car-company-billing/src/pages/Employee/Employee.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useData } from \"../../provider/DataProvider\";\r\nimport { Table, Button, Spin } from \"antd\";\r\nimport { Spinner } from \"../../components\";\r\n\r\nconst Employee = () => {\r\n  const [employees, setEmployees] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { getEmployees } = useData();\r\n\r\n  const getEmployee = async () => {\r\n    setIsLoading(true);\r\n    var lst = await getEmployees();\r\n    setEmployees(lst);\r\n    setIsLoading(false);\r\n    console.log(employees, \"invoices\", lst);\r\n  };\r\n\r\n  function capitalizeFirstLetter(str) {\r\n    return str[0].toUpperCase() + str.slice(1);\r\n  }\r\n\r\n  function capitalizeWords(sentence) {\r\n    const words = sentence.split(\" \");\r\n    const capitalizedWords = words.map((word) => capitalizeFirstLetter(word));\r\n    const reassembed = capitalizedWords.join(\" \");\r\n    return reassembed;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Employee Id\",\r\n      dataIndex: \"employeeId\",\r\n      key: \"employeeId\",\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      key: \"name\",\r\n      render: (rec) => (\r\n        <>\r\n          {rec.firstName.charAt(0).toUpperCase() +\r\n            rec.firstName.slice(1) +\r\n            \" \" +\r\n            rec.lastName.charAt(0).toUpperCase() +\r\n            rec.lastName.slice(1)}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Birthday\",\r\n      dataIndex: \"birthDate\",\r\n      key: \"birthDate\",\r\n    },\r\n    {\r\n      title: \"SIN\",\r\n      dataIndex: \"socSecNo\",\r\n      key: \"socSecNo\",\r\n    },\r\n    {\r\n      title: \"Hire Date\",\r\n      dataIndex: \"hireDate\",\r\n      key: \"hireDate\",\r\n    },\r\n    {\r\n      title: \"Salary\",\r\n      dataIndex: \"salary\",\r\n      key: \"salary\",\r\n    },\r\n    {\r\n      title: \"Bonus\",\r\n      dataIndex: \"bonus\",\r\n      key: \"bonus\",\r\n    },\r\n    {\r\n      title: \"Commission\",\r\n      dataIndex: \"commission\",\r\n      key: \"commission\",\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    getEmployee();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div style={{ margin: \"5px\" }}>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            <div style={{ fontWeight: \"600\", fontSize: \"18px\" }}>\r\n              Employee Table\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <Table\r\n                dataSource={employees}\r\n                columns={columns}\r\n                loading={isLoading}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}