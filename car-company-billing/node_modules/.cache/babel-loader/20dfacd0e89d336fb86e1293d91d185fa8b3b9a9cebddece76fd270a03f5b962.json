{"ast":null,"code":"import { parse } from 'node-html-parser';\nimport { convertStylesheet } from './parse.js';\nimport { createCache } from './cache.js';\nexport const CSS_CACHE = createCache({\n  limit: 30\n});\nexport const fetchStylesheet = async (src, fetchOptions, cache = true) => {\n  let image;\n  if (cache && CSS_CACHE.get(src)) {\n    return CSS_CACHE.get(src);\n  } else {\n    image = await (await fetch(src, fetchOptions)).text();\n  }\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n  if (cache) {\n    CSS_CACHE.set(src, image);\n  }\n  return image;\n};\nexport const fetchStylesheets = async (html, fetchOptions) => {\n  const document = parse(html, {\n    comment: false\n  });\n  const stylesheets = [];\n  const promises = document.querySelectorAll('link[rel=\"stylesheet\"][href]').map(async styleNode => {\n    try {\n      const styleText = await fetchStylesheet(styleNode.getAttribute('href'), fetchOptions);\n      if (styleText) {\n        stylesheets.push(convertStylesheet(styleText));\n      }\n    } catch (e) {\n      console.error(`Unable to get remote CSS file ${styleNode.getAttribute('href')}`, e);\n    }\n  });\n  try {\n    await Promise.all(promises);\n  } catch (e) {}\n  return stylesheets;\n};","map":{"version":3,"names":["parse","convertStylesheet","createCache","CSS_CACHE","limit","fetchStylesheet","src","fetchOptions","cache","image","get","fetch","text","Error","set","fetchStylesheets","html","document","comment","stylesheets","promises","querySelectorAll","map","styleNode","styleText","getAttribute","push","e","console","error","Promise","all"],"sources":["D:\\fullStackProjects\\CarCompanyBilling\\car-company-billing\\node_modules\\react-pdf-html\\src\\remoteCss.ts"],"sourcesContent":["import { parse } from 'node-html-parser';\nimport { HtmlStyles } from './styles.js';\nimport { convertStylesheet } from './parse.js';\nimport { createCache } from './cache.js';\n\nexport const CSS_CACHE = createCache({ limit: 30 });\n\nexport const fetchStylesheet = async (\n  src: string,\n  fetchOptions?: RequestInit,\n  cache = true\n) => {\n  let image: string;\n\n  if (cache && CSS_CACHE.get(src)) {\n    return CSS_CACHE.get(src);\n  } else {\n    image = await (await fetch(src, fetchOptions)).text();\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    CSS_CACHE.set(src, image);\n  }\n\n  return image;\n};\n\nexport const fetchStylesheets = async (\n  html: string,\n  fetchOptions?: RequestInit\n) => {\n  const document = parse(html, { comment: false });\n\n  const stylesheets: HtmlStyles[] = [];\n\n  const promises: Promise<void>[] = document\n    .querySelectorAll('link[rel=\"stylesheet\"][href]')\n    .map(async (styleNode) => {\n      try {\n        const styleText = await fetchStylesheet(\n          styleNode.getAttribute('href') as string,\n          fetchOptions\n        );\n        if (styleText) {\n          stylesheets.push(convertStylesheet(styleText));\n        }\n      } catch (e) {\n        console.error(\n          `Unable to get remote CSS file ${styleNode.getAttribute('href')}`,\n          e\n        );\n      }\n    });\n\n  try {\n    await Promise.all(promises);\n  } catch (e) {}\n\n  return stylesheets;\n};\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,kBAAkB;AAExC,SAASC,iBAAiB,QAAQ,YAAY;AAC9C,SAASC,WAAW,QAAQ,YAAY;AAExC,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAAEE,KAAK,EAAE;AAAE,CAAE,CAAC;AAEnD,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAC7BC,GAAW,EACXC,YAA0B,EAC1BC,KAAK,GAAG,IAAI,KACV;EACF,IAAIC,KAAa;EAEjB,IAAID,KAAK,IAAIL,SAAS,CAACO,GAAG,CAACJ,GAAG,CAAC,EAAE;IAC/B,OAAOH,SAAS,CAACO,GAAG,CAACJ,GAAG,CAAC;GAC1B,MAAM;IACLG,KAAK,GAAG,MAAM,CAAC,MAAME,KAAK,CAACL,GAAG,EAAEC,YAAY,CAAC,EAAEK,IAAI,EAAE;;EAGvD,IAAI,CAACH,KAAK,EAAE;IACV,MAAM,IAAII,KAAK,CAAC,sBAAsB,CAAC;;EAGzC,IAAIL,KAAK,EAAE;IACTL,SAAS,CAACW,GAAG,CAACR,GAAG,EAAEG,KAAK,CAAC;;EAG3B,OAAOA,KAAK;AACd,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAG,MAAAA,CAC9BC,IAAY,EACZT,YAA0B,KACxB;EACF,MAAMU,QAAQ,GAAGjB,KAAK,CAACgB,IAAI,EAAE;IAAEE,OAAO,EAAE;EAAK,CAAE,CAAC;EAEhD,MAAMC,WAAW,GAAiB,EAAE;EAEpC,MAAMC,QAAQ,GAAoBH,QAAQ,CACvCI,gBAAgB,CAAC,8BAA8B,CAAC,CAChDC,GAAG,CAAC,MAAOC,SAAS,IAAI;IACvB,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMnB,eAAe,CACrCkB,SAAS,CAACE,YAAY,CAAC,MAAM,CAAW,EACxClB,YAAY,CACb;MACD,IAAIiB,SAAS,EAAE;QACbL,WAAW,CAACO,IAAI,CAACzB,iBAAiB,CAACuB,SAAS,CAAC,CAAC;;KAEjD,CAAC,OAAOG,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CACX,iCAAiCN,SAAS,CAACE,YAAY,CAAC,MAAM,CAAC,EAAE,EACjEE,CAAC,CACF;;EAEL,CAAC,CAAC;EAEJ,IAAI;IACF,MAAMG,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;GAC5B,CAAC,OAAOO,CAAC,EAAE;EAEZ,OAAOR,WAAW;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}