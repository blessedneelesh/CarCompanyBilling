{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullStackProjects\\\\CarCompanyBilling\\\\car-company-billing\\\\src\\\\pages\\\\CustomerWithOrders\\\\CustomerWithOrders.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useData } from \"../../provider/DataProvider\";\nimport { Table } from \"antd\";\nimport { Spinner } from \"../../components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomerWithOrders = () => {\n  _s();\n  const [customerWithOrders, setCustomerWithOrders] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    getCustomerOrdersWithOrders\n  } = useData();\n  const CustomerOrdersWithOrders = async () => {\n    setIsLoading(true);\n    var lst = await getCustomerOrdersWithOrders();\n    setCustomerWithOrders(lst);\n    setIsLoading(false);\n    console.log(lst, \"invoices\", lst);\n  };\n  const columns = [{\n    title: \"Customer Id\",\n    dataIndex: \"customerId\",\n    key: \"customerId\"\n  }, {\n    title: \"Customer Name\",\n    dataIndex: \"customerFullName\",\n    key: \"customerFullName\"\n  }, {\n    title: \"Invoice Num\",\n    dataIndex: \"orderNum\",\n    key: \"orderNum\"\n  }, {\n    title: \"Car Id\",\n    dataIndex: \"carId\",\n    key: \"carId\"\n  }, {\n    title: \"Model\",\n    dataIndex: \"model\",\n    key: \"model\"\n  }, {\n    title: \"Make\",\n    dataIndex: \"make\",\n    key: \"make\"\n  }];\n  useEffect(() => {\n    CustomerOrdersWithOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"5px\"\n      },\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: \"600\",\n            fontSize: \"18px\"\n          },\n          children: \"Customer Orders Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: customerWithOrders,\n            columns: columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CustomerWithOrders, \"1ZSAbLdssV0SoRIEnlgBeGXAfvs=\", false, function () {\n  return [useData];\n});\n_c = CustomerWithOrders;\nexport default CustomerWithOrders;\nvar _c;\n$RefreshReg$(_c, \"CustomerWithOrders\");","map":{"version":3,"names":["useEffect","useState","useData","Table","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerWithOrders","_s","customerWithOrders","setCustomerWithOrders","isLoading","setIsLoading","getCustomerOrdersWithOrders","CustomerOrdersWithOrders","lst","console","log","columns","title","dataIndex","key","children","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","fontSize","padding","dataSource","_c","$RefreshReg$"],"sources":["D:/fullStackProjects/CarCompanyBilling/car-company-billing/src/pages/CustomerWithOrders/CustomerWithOrders.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useData } from \"../../provider/DataProvider\";\r\nimport { Table } from \"antd\";\r\nimport { Spinner } from \"../../components\";\r\n\r\nconst CustomerWithOrders = () => {\r\n  const [customerWithOrders, setCustomerWithOrders] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { getCustomerOrdersWithOrders } = useData();\r\n\r\n  const CustomerOrdersWithOrders = async () => {\r\n    setIsLoading(true);\r\n    var lst = await getCustomerOrdersWithOrders();\r\n    setCustomerWithOrders(lst);\r\n    setIsLoading(false);\r\n    console.log(lst, \"invoices\", lst);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Customer Id\",\r\n      dataIndex: \"customerId\",\r\n      key: \"customerId\",\r\n    },\r\n    {\r\n      title: \"Customer Name\",\r\n      dataIndex: \"customerFullName\",\r\n      key: \"customerFullName\",\r\n    },\r\n    {\r\n      title: \"Invoice Num\",\r\n      dataIndex: \"orderNum\",\r\n      key: \"orderNum\",\r\n    },\r\n    {\r\n      title: \"Car Id\",\r\n      dataIndex: \"carId\",\r\n      key: \"carId\",\r\n    },\r\n    {\r\n      title: \"Model\",\r\n      dataIndex: \"model\",\r\n      key: \"model\",\r\n    },\r\n    {\r\n      title: \"Make\",\r\n      dataIndex: \"make\",\r\n      key: \"make\",\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    CustomerOrdersWithOrders();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div style={{ margin: \"5px\" }}>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            <div style={{ fontWeight: \"600\", fontSize: \"18px\" }}>\r\n              Customer Orders Table\r\n            </div>\r\n            <div style={{ padding: \"10px\" }}>\r\n              <Table dataSource={customerWithOrders} columns={columns} />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerWithOrders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}