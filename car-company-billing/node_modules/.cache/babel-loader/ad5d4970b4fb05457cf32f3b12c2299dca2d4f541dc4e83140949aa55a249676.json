{"ast":null,"code":"function walk(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n  if (isDate(obj) || isRegex(obj)) {\n    return obj;\n  }\n  if (isArray(obj)) {\n    return map(obj, walk);\n  }\n  return reduce(objectKeys(obj), function (acc, key) {\n    const camel = camelCase(key);\n    acc[camel] = walk(obj[key]);\n    return acc;\n  }, {});\n}\nfunction camelCase(str) {\n  return str.replace(/[_.-](\\w|$)/g, function (_, x) {\n    return x.toUpperCase();\n  });\n}\nconst isArray = Array.isArray || function (obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\nconst isDate = function (obj) {\n  return Object.prototype.toString.call(obj) === '[object Date]';\n};\nconst isRegex = function (obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\nconst has = Object.prototype.hasOwnProperty;\nconst objectKeys = Object.keys || function (obj) {\n  const keys = [];\n  for (const key in obj) {\n    if (has.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\nfunction map(xs, f) {\n  if (xs.map) {\n    return xs.map(f);\n  }\n  const res = [];\n  for (let i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\nfunction reduce(xs, f, acc) {\n  if (xs.reduce) {\n    return xs.reduce(f, acc);\n  }\n  for (let i = 0; i < xs.length; i++) {\n    acc = f(acc, xs[i], i);\n  }\n  return acc;\n}\nconst camelize = function (obj) {\n  if (typeof obj === 'string') {\n    return camelCase(obj);\n  }\n  return walk(obj);\n};\nexport default camelize;","map":{"version":3,"names":["walk","obj","isDate","isRegex","isArray","map","reduce","objectKeys","acc","key","camel","camelCase","str","replace","_","x","toUpperCase","Array","Object","prototype","toString","call","has","hasOwnProperty","keys","push","xs","f","res","i","length","camelize"],"sources":["D:\\fullStackProjects\\CarCompanyBilling\\car-company-billing\\node_modules\\react-pdf-html\\src\\camelize.ts"],"sourcesContent":["function walk(obj: any) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n  if (isDate(obj) || isRegex(obj)) {\n    return obj;\n  }\n  if (isArray(obj)) {\n    return map(obj, walk);\n  }\n  return reduce(\n    objectKeys(obj),\n    function (acc: any, key: string) {\n      const camel = camelCase(key);\n      acc[camel] = walk(obj[key]);\n      return acc;\n    },\n    {}\n  );\n}\n\nfunction camelCase(str: string) {\n  return str.replace(/[_.-](\\w|$)/g, function (_, x) {\n    return x.toUpperCase();\n  });\n}\n\nconst isArray =\n  Array.isArray ||\n  function (obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n  };\n\nconst isDate = function (obj: any) {\n  return Object.prototype.toString.call(obj) === '[object Date]';\n};\n\nconst isRegex = function (obj: any) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nconst has = Object.prototype.hasOwnProperty;\nconst objectKeys =\n  Object.keys ||\n  function (obj) {\n    const keys = [];\n    for (const key in obj) {\n      if (has.call(obj, key)) {\n        keys.push(key);\n      }\n    }\n    return keys;\n  };\n\nfunction map(xs: any, f: any) {\n  if (xs.map) {\n    return xs.map(f);\n  }\n  const res = [];\n  for (let i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nfunction reduce(xs: any, f: any, acc: any) {\n  if (xs.reduce) {\n    return xs.reduce(f, acc);\n  }\n  for (let i = 0; i < xs.length; i++) {\n    acc = f(acc, xs[i], i);\n  }\n  return acc;\n}\n\nconst camelize = function (obj: any) {\n  if (typeof obj === 'string') {\n    return camelCase(obj);\n  }\n  return walk(obj);\n};\n\nexport default camelize;\n"],"mappings":"AAAA,SAASA,IAAIA,CAACC,GAAQ;EACpB,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACnC,OAAOA,GAAG;;EAEZ,IAAIC,MAAM,CAACD,GAAG,CAAC,IAAIE,OAAO,CAACF,GAAG,CAAC,EAAE;IAC/B,OAAOA,GAAG;;EAEZ,IAAIG,OAAO,CAACH,GAAG,CAAC,EAAE;IAChB,OAAOI,GAAG,CAACJ,GAAG,EAAED,IAAI,CAAC;;EAEvB,OAAOM,MAAM,CACXC,UAAU,CAACN,GAAG,CAAC,EACf,UAAUO,GAAQ,EAAEC,GAAW;IAC7B,MAAMC,KAAK,GAAGC,SAAS,CAACF,GAAG,CAAC;IAC5BD,GAAG,CAACE,KAAK,CAAC,GAAGV,IAAI,CAACC,GAAG,CAACQ,GAAG,CAAC,CAAC;IAC3B,OAAOD,GAAG;EACZ,CAAC,EACD,EAAE,CACH;AACH;AAEA,SAASG,SAASA,CAACC,GAAW;EAC5B,OAAOA,GAAG,CAACC,OAAO,CAAC,cAAc,EAAE,UAAUC,CAAC,EAAEC,CAAC;IAC/C,OAAOA,CAAC,CAACC,WAAW,EAAE;EACxB,CAAC,CAAC;AACJ;AAEA,MAAMZ,OAAO,GACXa,KAAK,CAACb,OAAO,IACb,UAAUH,GAAG;EACX,OAAOiB,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACpB,GAAG,CAAC,KAAK,gBAAgB;AACjE,CAAC;AAEH,MAAMC,MAAM,GAAG,SAAAA,CAAUD,GAAQ;EAC/B,OAAOiB,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACpB,GAAG,CAAC,KAAK,eAAe;AAChE,CAAC;AAED,MAAME,OAAO,GAAG,SAAAA,CAAUF,GAAQ;EAChC,OAAOiB,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACpB,GAAG,CAAC,KAAK,iBAAiB;AAClE,CAAC;AAED,MAAMqB,GAAG,GAAGJ,MAAM,CAACC,SAAS,CAACI,cAAc;AAC3C,MAAMhB,UAAU,GACdW,MAAM,CAACM,IAAI,IACX,UAAUvB,GAAG;EACX,MAAMuB,IAAI,GAAG,EAAE;EACf,KAAK,MAAMf,GAAG,IAAIR,GAAG,EAAE;IACrB,IAAIqB,GAAG,CAACD,IAAI,CAACpB,GAAG,EAAEQ,GAAG,CAAC,EAAE;MACtBe,IAAI,CAACC,IAAI,CAAChB,GAAG,CAAC;;;EAGlB,OAAOe,IAAI;AACb,CAAC;AAEH,SAASnB,GAAGA,CAACqB,EAAO,EAAEC,CAAM;EAC1B,IAAID,EAAE,CAACrB,GAAG,EAAE;IACV,OAAOqB,EAAE,CAACrB,GAAG,CAACsB,CAAC,CAAC;;EAElB,MAAMC,GAAG,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,EAAE,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAClCD,GAAG,CAACH,IAAI,CAACE,CAAC,CAACD,EAAE,CAACG,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC;;EAEvB,OAAOD,GAAG;AACZ;AAEA,SAAStB,MAAMA,CAACoB,EAAO,EAAEC,CAAM,EAAEnB,GAAQ;EACvC,IAAIkB,EAAE,CAACpB,MAAM,EAAE;IACb,OAAOoB,EAAE,CAACpB,MAAM,CAACqB,CAAC,EAAEnB,GAAG,CAAC;;EAE1B,KAAK,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,EAAE,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAClCrB,GAAG,GAAGmB,CAAC,CAACnB,GAAG,EAAEkB,EAAE,CAACG,CAAC,CAAC,EAAEA,CAAC,CAAC;;EAExB,OAAOrB,GAAG;AACZ;AAEA,MAAMuB,QAAQ,GAAG,SAAAA,CAAU9B,GAAQ;EACjC,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAOU,SAAS,CAACV,GAAG,CAAC;;EAEvB,OAAOD,IAAI,CAACC,GAAG,CAAC;AAClB,CAAC;AAED,eAAe8B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}