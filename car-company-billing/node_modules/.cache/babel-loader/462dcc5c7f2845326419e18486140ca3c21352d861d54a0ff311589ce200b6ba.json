{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullStackProjects\\\\CarCompanyBilling\\\\car-company-billing\\\\src\\\\pages\\\\Customer\\\\Customer.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useData } from \"../../provider/DataProvider\";\nimport { Table, Button } from \"antd\";\nimport { Spinner } from \"../../components\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Customer = () => {\n  _s();\n  const [customer, setCustomer] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    getCustomer\n  } = useData();\n  const getCustomers = async () => {\n    var lst = await getCustomer();\n    setCustomer(lst);\n    console.log(lst, \"invoices\", lst);\n  };\n  const columns = [{\n    title: \"Customer Id\",\n    dataIndex: \"customerId\",\n    key: \"customerId\"\n  }, {\n    title: \"Name\",\n    key: \"name\",\n    render: rec => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", rec.firstName.charAt(0).toUpperCase() + rec.firstName.slice(1) + \" \" + rec.lastName.charAt(0).toUpperCase() + rec.lastName.slice(1)]\n    }, void 0, true)\n  }, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\"\n  }, {\n    title: \"Phone Number\",\n    dataIndex: \"phoneNumber\",\n    key: \"phoneNumber\"\n  }, {\n    title: \"Zip\",\n    dataIndex: \"zip\",\n    key: \"zip\"\n  }];\n  useEffect(() => {\n    getCustomers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"5px\"\n      },\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: \"600\",\n            fontSize: \"18px\"\n          },\n          children: \"Customer Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: customer,\n            columns: columns,\n            loading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Customer, \"Om/dj5ylfrBEh2ZPJmrQz/yFYhs=\", false, function () {\n  return [useData];\n});\n_c = Customer;\nexport default Customer;\nvar _c;\n$RefreshReg$(_c, \"Customer\");","map":{"version":3,"names":["useEffect","useState","useData","Table","Button","Spinner","Fragment","_Fragment","jsxDEV","_jsxDEV","Customer","_s","customer","setCustomer","isLoading","setIsLoading","getCustomer","getCustomers","lst","console","log","columns","title","dataIndex","key","render","rec","children","firstName","charAt","toUpperCase","slice","lastName","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","fontSize","marginTop","dataSource","loading","_c","$RefreshReg$"],"sources":["D:/fullStackProjects/CarCompanyBilling/car-company-billing/src/pages/Customer/Customer.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useData } from \"../../provider/DataProvider\";\r\nimport { Table, Button } from \"antd\";\r\nimport { Spinner } from \"../../components\";\r\n\r\nconst Customer = () => {\r\n  const [customer, setCustomer] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { getCustomer } = useData();\r\n\r\n  const getCustomers = async () => {\r\n    var lst = await getCustomer();\r\n    setCustomer(lst);\r\n    console.log(lst, \"invoices\", lst);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Customer Id\",\r\n      dataIndex: \"customerId\",\r\n      key: \"customerId\",\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      key: \"name\",\r\n      render: (rec) => (\r\n        <>\r\n          {\" \"}\r\n          {rec.firstName.charAt(0).toUpperCase() +\r\n            rec.firstName.slice(1) +\r\n            \" \" +\r\n            rec.lastName.charAt(0).toUpperCase() +\r\n            rec.lastName.slice(1)}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n    },\r\n    {\r\n      title: \"Phone Number\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: \"phoneNumber\",\r\n    },\r\n    {\r\n      title: \"Zip\",\r\n      dataIndex: \"zip\",\r\n      key: \"zip\",\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div style={{ margin: \"5px\" }}>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            <div style={{ fontWeight: \"600\", fontSize: \"18px\" }}>\r\n              Customer Table\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <Table\r\n                dataSource={customer}\r\n                columns={columns}\r\n                loading={isLoading}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Customer;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AACpC,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM;IAAEe;EAAY,CAAC,GAAGd,OAAO,CAAC,CAAC;EAEjC,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIC,GAAG,GAAG,MAAMF,WAAW,CAAC,CAAC;IAC7BH,WAAW,CAACK,GAAG,CAAC;IAChBC,OAAO,CAACC,GAAG,CAACF,GAAG,EAAE,UAAU,EAAEA,GAAG,CAAC;EACnC,CAAC;EAED,MAAMG,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,aAAa;IACpBC,SAAS,EAAE,YAAY;IACvBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,MAAM;IACbE,GAAG,EAAE,MAAM;IACXC,MAAM,EAAGC,GAAG,iBACVjB,OAAA,CAAAF,SAAA;MAAAoB,QAAA,GACG,GAAG,EACHD,GAAG,CAACE,SAAS,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GACpCJ,GAAG,CAACE,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,GACtB,GAAG,GACHL,GAAG,CAACM,QAAQ,CAACH,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GACpCJ,GAAG,CAACM,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC;IAAA,eACvB;EAEN,CAAC,EACD;IACET,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,SAAS;IACpBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,cAAc;IACrBC,SAAS,EAAE,aAAa;IACxBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE,KAAK;IAChBC,GAAG,EAAE;EACP,CAAC,CACF;EACDxB,SAAS,CAAC,MAAM;IACdiB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EACN,oBACER,OAAA,CAAAF,SAAA;IAAAoB,QAAA,eACElB,OAAA;MAAKwB,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAM,CAAE;MAAAP,QAAA,EAC3Bb,SAAS,gBACRL,OAAA,CAACJ,OAAO;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEX7B,OAAA,CAAAF,SAAA;QAAAoB,QAAA,gBACElB,OAAA;UAAKwB,KAAK,EAAE;YAAEM,UAAU,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAb,QAAA,EAAC;QAErD;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN7B,OAAA;UAAKwB,KAAK,EAAE;YAAEQ,SAAS,EAAE;UAAO,CAAE;UAAAd,QAAA,eAChClB,OAAA,CAACN,KAAK;YACJuC,UAAU,EAAE9B,QAAS;YACrBS,OAAO,EAAEA,OAAQ;YACjBsB,OAAO,EAAE7B;UAAU;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACN,CAAC;AAEP,CAAC;AAAC3B,EAAA,CAzEID,QAAQ;EAAA,QAIYR,OAAO;AAAA;AAAA0C,EAAA,GAJ3BlC,QAAQ;AA2Ed,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}