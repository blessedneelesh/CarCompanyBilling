{"version":3,"file":"render.test.js","sourceRoot":"","sources":["../../src/render.test.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,+BAA+B;AAG/B,2CAIqB;AAErB,MAAM,KAAK,GAAG,CAAC,MAAW,EAAE,EAAE;IAC5B,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACzB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACvB;SAAM,IAAI,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC/C,IAAI,MAAM,CAAC,UAAU,EAAE;YACrB,OAAO,MAAM,CAAC,UAAU,CAAC;SAC1B;QACD,IAAI,MAAM,CAAC,UAAU,EAAE;YACrB,OAAO,MAAM,CAAC,UAAU,CAAC;SAC1B;QACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC1D;AACH,CAAC,CAAC;AAEF,kDAO6B;AAC7B,6BAA6B;AAC7B,iDAIwB;AACxB,iDAAkD;AAElD,MAAM,aAAa,GAAgB;IACjC,GAAG,EAAE,MAAM;CACG,CAAC;AAEjB,MAAM,YAAY,GAAgB;IAChC,GAAG,EAAE,KAAK;CACI,CAAC;AAEjB,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACtB,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE;YACnE,MAAM,CAAC,IAAA,8BAAkB,EAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;YAC/E,MAAM,aAAa,GAAG;;;OAGrB,CAAC;YAEF,MAAM,QAAQ,GAAgB;gBAC5B,YAAY;gBACZ,YAAY;gBACZ,aAAa;gBACb,aAAa;gBACb,YAAY;aACb,CAAC;YAEF,MAAM,QAAQ,GAAG,IAAA,0BAAc,EAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;gBACvB,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,EAAE;gBACzD,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,aAAa,EAAE,kBAAkB,CAAC,EAAE;gBACjE,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,YAAY,CAAC,EAAE;aAC5C,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;YAC1E,MAAM,aAAa,GAAG;;;OAGrB,CAAC;YAEF,MAAM,QAAQ,GAAgB;gBAC5B,YAAY;gBACZ,YAAY;gBACZ,aAAa;gBACb,aAAa;gBACb,YAAY;aACb,CAAC;YAEF,MAAM,QAAQ,GAAG,IAAA,0BAAc,EAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEjD,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;gBACvB,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,EAAE;gBACzD,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC,EAAE;gBAC5D,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,YAAY,CAAC,EAAE;aAC5C,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;YACjD,MAAM,CAAC,IAAA,2BAAe,EAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;YACjD,MAAM,CAAC,IAAA,2BAAe,EAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;YAC/C,MAAM,CAAC,IAAA,2BAAe,EAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE;YACnE,MAAM,6BAA6B,GAAgB;gBACjD,GAAG,EAAE,MAAa;gBAClB,OAAO,EAAE,CAAC,YAAY,CAAC;aACT,CAAC;YACjB,MAAM,CAAC,IAAA,2BAAe,EAAC,6BAA6B,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE;YACnE,MAAM,sBAAsB,GAAgB;gBAC1C,GAAG,EAAE,GAAU;gBACf,OAAO,EAAE,CAAC,YAAY,CAAC;aACT,CAAC;YACjB,MAAM,CAAC,IAAA,2BAAe,EAAC,sBAAsB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;YACrE,MAAM,uBAAuB,GAAgB;gBAC3C,GAAG,EAAE,GAAU;gBACf,OAAO,EAAE,CAAC,aAAa,CAAC;aACV,CAAC;YACjB,MAAM,CAAC,IAAA,2BAAe,EAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;YACrE,MAAM,6BAA6B,GAAgB;gBACjD,GAAG,EAAE,MAAa;gBAClB,OAAO,EAAE,CAAC,aAAa,CAAC;aACV,CAAC;YACjB,MAAM,CAAC,IAAA,2BAAe,EAAC,6BAA6B,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;QAC1B,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACvC,MAAM,OAAO,GAAG,IAAA,mBAAU,EAAC,SAAS,EAAE;gBACpC,KAAK,EAAE;oBACL,KAAK,EAAE,MAAM;iBACd;aACF,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;gBAClC,EAAE,KAAK,EAAE,MAAM,EAAE;gBACjB,EAAE,QAAQ,EAAE,EAAE,EAAE;aACjB,CAAC,CAAC;YAEH,MAAM,OAAO,GAAG,IAAA,mBAAU,EAAC,SAAS,EAAE;gBACpC,KAAK,EAAE;oBACL;wBACE,KAAK,EAAE,MAAM;qBACd;iBACF;aACF,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;gBAClC,EAAE,KAAK,EAAE,MAAM,EAAE;gBACjB,EAAE,QAAQ,EAAE,EAAE,EAAE;aACjB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE,GAAS,EAAE;YACrD,MAAM,IAAI,GAAG;;;;;;;;;;;;QAYX,CAAC;YAEH,MAAM,WAAW,GAAG,MAAM,IAAA,+BAAgB,EAAC,IAAI,CAAC,CAAC;YACjD,4BAA4B;YAE5B,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,IAAI,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC;YAC/D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YAEtB,MAAM,IAAI,GAAG,2BAA2B,CAAC;YACzC,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,IAAI,EAAE;gBAChC,SAAS,EAAE;oBACT,GAAG;iBACJ;aACF,CAAC,CAAC;YACH,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YACjC,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC3C,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;YAClD,MAAM,IAAI,GAAG,2CAA2C,CAAC;YACzD,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAEjC,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,sBAAS,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEtC,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;YAChE,MAAM,IAAI,GAAG,uGAAuG,CAAC;YACrH,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAEjC,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACtC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,0BAAW,CAAC,CAAC;YAEjC,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE,GAAG,EAAE;YAC1D,MAAM,IAAI,GAAG,sDAAsD,CAAC;YACpE,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,IAAI,EAAE;gBAChC,SAAS,EAAE;oBACT,aAAa,EAAE,GAAG,EAAE,CAAC,oBAAC,eAAI,OAAG;iBAC9B;aACF,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;YACjD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACpD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;YACpE,MAAM,IAAI,GAAG,4EAA4E,CAAC;YAC1F,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAEjC,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACtC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,0BAAW,CAAC,CAAC;YAEjC,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE5C,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAEjD,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAE3C,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;YACzC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEjD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;YAChE,MAAM,IAAI,GAAG,sFAAsF,CAAC;YACpG,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAEjC,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACtC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,0BAAW,CAAC,CAAC;YACjC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAExC,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAC/B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEhD,MAAM,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACjD,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,0BAAW,CAAC,CAAC;YACzC,MAAM,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC1C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAEpD,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAC/B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;YACzD,MAAM,OAAO,GAAG;;;;;;;CAOrB,CAAC;YAEI,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,OAAO,CAAC,CAAC;YACrC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAEhB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE/C,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEtC,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;gBAC/B;oBACE,eAAe,EAAE,SAAS;iBAC3B;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;YACvD,MAAM,OAAO,GAAG;;CAErB,CAAC;YAEI,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,OAAO,CAAC,CAAC;YACrC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAEhB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAEjC,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEtC,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;YACjD,MAAM,OAAO,GAAG;;CAErB,CAAC;YAEI,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,OAAO,CAAC,CAAC;YACrC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAEhB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAEjC,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEtC,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAElC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qDAAqD,EAAE,GAAS,EAAE;YACnE,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YAE/C,eAAI,CAAC,KAAK,EAAE,CAAC;YACb,eAAI,CAAC,QAAQ,CAAC;gBACZ,MAAM,EAAE,WAAW;gBACnB,KAAK,EAAE;oBACL,EAAE,GAAG,EAAE,KAAK,GAAG,iCAAiC,EAAE;oBAClD,EAAE,GAAG,EAAE,KAAK,GAAG,8BAA8B,EAAE,UAAU,EAAE,MAAM,EAAE;oBACnE;wBACE,GAAG,EAAE,KAAK,GAAG,gCAAgC;wBAC7C,SAAS,EAAE,QAAQ;qBACpB;oBACD;wBACE,GAAG,EAAE,KAAK,GAAG,oCAAoC;wBACjD,UAAU,EAAE,MAAM;wBAClB,SAAS,EAAE,QAAQ;qBACpB;iBACF;aACF,CAAC,CAAC;YAEH,MAAM,eAAI,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC;YAE7C,MAAM,OAAO,GAAG;;;;;;;;;;;;;;;;;;QAkBd,CAAC;YAEH,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,OAAO,CAAC,CAAC;YACrC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAEjC,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,gCAAiB,CAAC,CAAC;YAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE3C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,yBAAU,CAAC,CAAC;YACpC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE9C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,0BAAW,CAAC,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE3C,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,0BAAW,CAAC,CAAC;YACjC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACtC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAExC,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE5C,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,sBAAS,CAAC,GAAG,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAE5C,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,0BAAW,CAAC,CAAC;YAClC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAExC,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC7B,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEzC,iDAAiD;YACjD,qCAAqC;YACrC,iCAAiC;YACjC,aAAa;YACb,0DAA0D;YAC1D,MAAM;YACN,MAAM;YAEN,MAAM,QAAQ,GAAG,CACf,oBAAC,mBAAQ;gBACP,oBAAC,eAAI,IAAC,IAAI,EAAC,QAAQ;oBACjB,0CAAG,QAAQ,CAAI,CACV,CACE,CACZ,CAAC;YAEF,MAAM,SAAS,GAAG,MAAM,IAAA,yBAAc,EAAC,QAAQ,CAAC,CAAC;YACjD,0BAA0B;QAC5B,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAS,EAAE;QAC9D,MAAM,OAAO,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAyCR,CAAC;QAET,MAAM,QAAQ,GAAG,IAAA,mBAAU,EAAC,OAAO,CAAC,CAAC;QACrC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAI,CAAC,CAAC;QAEjC,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,gCAAiB,CAAC,CAAC;QAE1C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,0BAAW,CAAC,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE5C,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAChC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC;YACjD,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,4BAA4B;SACpC,CAAC,CAAC;QAEH,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAExD,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAChE,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC;YAC5D,EAAE,EAAE,YAAY;YAChB,EAAE,EAAE,IAAI;YACR,EAAE,EAAE,MAAM;YACV,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,KAAK;SACV,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC;YACpD,MAAM,EAAE,IAAI;YACZ,YAAY,EAAE,KAAK;YACnB,cAAc,EAAE,GAAG;SACpB,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC;YACpD,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,kCAAkC;SAC1C,CAAC,CAAC;QAEH,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEhE,MAAM,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE9C,MAAM,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE9C,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC5C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEtD,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE5C,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE/C,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtC,MAAM,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;QACjC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEjD,MAAM,QAAQ,GAAG,CACf,oBAAC,mBAAQ;YACP,oBAAC,eAAI,IAAC,IAAI,EAAC,QAAQ;gBACjB,0CAAG,QAAQ,CAAI,CACV,CACE,CACZ,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,IAAA,yBAAc,EAAC,QAAQ,CAAC,CAAC;IACnD,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n// const stringify = require('json-stringify-safe');\nimport { HtmlContent, HtmlElement } from './parse.js';\nimport renderHtml, {\n  bucketElements,\n  collapseWhitespace,\n  hasBlockContent,\n} from './render.js';\n\nconst scrub = (object: any) => {\n  if (Array.isArray(object)) {\n    object.forEach(scrub);\n  } else if (object && typeof object === 'object') {\n    if (object.parentNode) {\n      delete object.parentNode;\n    }\n    if (object.childNodes) {\n      delete object.childNodes;\n    }\n    Object.keys(object).forEach((key) => scrub(object[key]));\n  }\n};\n\nimport ReactPDF, {\n  Text,\n  View,\n  Page,\n  Document,\n  Font,\n  renderToString,\n} from '@react-pdf/renderer';\nimport * as path from 'path';\nimport renderers, {\n  renderBlock,\n  renderNoop,\n  renderPassThrough,\n} from './renderers.js';\nimport { fetchStylesheets } from './remoteCss.js';\n\nconst inlineElement: HtmlElement = {\n  tag: 'span',\n} as HtmlElement;\n\nconst blockElement: HtmlElement = {\n  tag: 'div',\n} as HtmlElement;\n\ndescribe('render', () => {\n  describe('collapseWhitespace', () => {\n    it('Should reduce all continuous whitespace to a single space', () => {\n      expect(collapseWhitespace('\\n\\n foo  \\t  bar  ')).toBe(' foo bar ');\n    });\n  });\n\n  describe('bucketElements', () => {\n    it('Should bucket elements and trim strings correctly with collapse: true', () => {\n      const stringContent = `  foo\n      bar\n      \n      `;\n\n      const elements: HtmlContent = [\n        blockElement,\n        blockElement,\n        inlineElement,\n        stringContent,\n        blockElement,\n      ];\n\n      const bucketed = bucketElements(elements, true);\n\n      expect(bucketed).toEqual([\n        { hasBlock: true, content: [blockElement, blockElement] },\n        { hasBlock: false, content: [inlineElement, '  foo\\n      bar'] },\n        { hasBlock: true, content: [blockElement] },\n      ]);\n    });\n\n    it('Should bucket elements and not trim strings with collapse: false', () => {\n      const stringContent = `  foo\n      bar\n      \n      `;\n\n      const elements: HtmlContent = [\n        blockElement,\n        blockElement,\n        inlineElement,\n        stringContent,\n        blockElement,\n      ];\n\n      const bucketed = bucketElements(elements, false);\n\n      expect(bucketed).toEqual([\n        { hasBlock: true, content: [blockElement, blockElement] },\n        { hasBlock: false, content: [inlineElement, stringContent] },\n        { hasBlock: true, content: [blockElement] },\n      ]);\n    });\n  });\n\n  describe('hasBlockContent', () => {\n    it('Should return false for string elements', () => {\n      expect(hasBlockContent('')).toBe(false);\n    });\n\n    it('Should return false for inline elements', () => {\n      expect(hasBlockContent(inlineElement)).toBe(false);\n    });\n\n    it('Should return true for block elements', () => {\n      expect(hasBlockContent(blockElement)).toBe(true);\n    });\n\n    it('Should return true for inline elements with block content', () => {\n      const inlineElementWithBlockContent: HtmlElement = {\n        tag: 'span' as any,\n        content: [blockElement],\n      } as HtmlElement;\n      expect(hasBlockContent(inlineElementWithBlockContent)).toBe(true);\n    });\n\n    it('Should return true for anchor elements with block content', () => {\n      const anchorWithBlockContent: HtmlElement = {\n        tag: 'a' as any,\n        content: [blockElement],\n      } as HtmlElement;\n      expect(hasBlockContent(anchorWithBlockContent)).toBe(true);\n    });\n\n    it('Should return false for anchor elements with inline content', () => {\n      const anchorWithInlineContent: HtmlElement = {\n        tag: 'a' as any,\n        content: [inlineElement],\n      } as HtmlElement;\n      expect(hasBlockContent(anchorWithInlineContent)).toBe(false);\n    });\n\n    it('Should return false for inline elements with inline content', () => {\n      const inlineElementWithBlockContent: HtmlElement = {\n        tag: 'span' as any,\n        content: [inlineElement],\n      } as HtmlElement;\n      expect(hasBlockContent(inlineElementWithBlockContent)).toBe(false);\n    });\n  });\n\n  describe('renderHtml', () => {\n    it('Should correctly merge styles', () => {\n      const result1 = renderHtml('<p></p>', {\n        style: {\n          color: 'blue',\n        },\n      });\n      expect(result1.props.style).toEqual([\n        { color: 'blue' },\n        { fontSize: 18 },\n      ]);\n\n      const result2 = renderHtml('<p></p>', {\n        style: [\n          {\n            color: 'blue',\n          },\n        ],\n      });\n      expect(result2.props.style).toEqual([\n        { color: 'blue' },\n        { fontSize: 18 },\n      ]);\n    });\n\n    it('Should be able to render external CSS', async () => {\n      const html = `<html>\n  <head>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\n      crossorigin=\"anonymous\" />\n  </head>\n  \n  <body>\n    <div></div>\n  </body>\n</html>`;\n\n      const stylesheets = await fetchStylesheets(html);\n      // console.log(stylesheets);\n\n      const rendered = renderHtml(html, { stylesheet: stylesheets });\n      console.log(rendered);\n    });\n\n    it('Should use a custom renderer', () => {\n      const foo = jest.fn();\n\n      const html = '<foo>Custom Content</foo>';\n      const rootView = renderHtml(html, {\n        renderers: {\n          foo,\n        },\n      });\n      expect(rootView.type).toBe(View);\n      const firstChild = rootView.props.children;\n      expect(firstChild.type).toBe(foo);\n    });\n\n    it('Should render a link with text inside it', () => {\n      const html = '<a href=\"http://google.com\">link text</a>';\n      const rootView = renderHtml(html);\n      expect(rootView.type).toBe(View);\n\n      const a = rootView.props.children;\n      expect(a.type).toBe(renderers.a);\n      expect(a.props.element.tag).toBe('a');\n\n      const aText = a.props.children;\n      expect(aText.type).toBe(Text);\n      expect(aText.props.children).toEqual('link text');\n    });\n\n    it('Should render inline elements with proper text wrapper', () => {\n      const html = `<p>Paragraph with <strong>bold</strong>, <i>italic</i>, <u>underline</u> and <s>strikethrough</s></p>`;\n      const rootView = renderHtml(html);\n      expect(rootView.type).toBe(View);\n\n      const p = rootView.props.children;\n      expect(p.props.element.tag).toBe('p');\n      expect(p.type).toBe(renderBlock);\n\n      const pText = p.props.children;\n      expect(pText.type).toBe(Text);\n      expect(pText.props.children.length).toBe(8);\n    });\n\n    it('Should render keep spaces around custom elements', () => {\n      const html = `<p>Paragraph with <CustomElement /> between text</p>`;\n      const rootView = renderHtml(html, {\n        renderers: {\n          customelement: () => <View />,\n        },\n      });\n      const p = rootView.props.children.props.children;\n      expect(p[0].props.children).toBe('Paragraph with ');\n      expect(p[2].props.children).toBe(' between text');\n    });\n\n    it('Should render anchors as inline if their content is inline', () => {\n      const html = `<p>Link to <a href=\"//www.google.com\">Google</a> using react-pdf-html.</p>`;\n      const rootView = renderHtml(html);\n      expect(rootView.type).toBe(View);\n\n      const p = rootView.props.children;\n      expect(p.props.element.tag).toBe('p');\n      expect(p.type).toBe(renderBlock);\n\n      const pText = p.props.children;\n      expect(pText.type).toBe(Text);\n      expect(pText.props.children.length).toBe(3);\n\n      expect(pText.props.children[0]).toBe('Link to ');\n\n      const anchor = pText.props.children[1];\n      expect(anchor.props.element.tag).toBe('a');\n\n      const anchorText = anchor.props.children;\n      expect(anchorText.type).toBe(Text);\n      expect(anchorText.props.children).toBe('Google');\n\n      expect(pText.props.children[2]).toBe(' using react-pdf-html.');\n    });\n\n    it('Should render span as block style suggests it is block', () => {\n      const html = `<p>Expecting <span style=\"display: block\">block text!</span> to render correctly</p>`;\n      const rootView = renderHtml(html);\n      expect(rootView.type).toBe(View);\n\n      const p = rootView.props.children;\n      expect(p.props.element.tag).toBe('p');\n      expect(p.type).toBe(renderBlock);\n      expect(p.props.children.length).toBe(3);\n\n      const pText1 = p.props.children[0];\n      expect(pText1.type).toBe(Text);\n      expect(pText1.props.children).toBe('Expecting');\n\n      const blockSpan = p.props.children[1];\n      expect(blockSpan.props.element.tag).toBe('span');\n      expect(blockSpan.type).toBe(renderBlock);\n      const spanText = blockSpan.props.children;\n      expect(spanText.type).toBe(Text);\n      expect(spanText.props.children).toBe('block text!');\n\n      const pText2 = p.props.children[2];\n      expect(pText2.type).toBe(Text);\n      expect(pText2.props.children).toBe('to render correctly');\n    });\n\n    it('Should apply background-color to child elements', () => {\n      const content = `\n<style>\n.highlightClass {\n  background-color: #ffff00;\n}\n</style>\n<p><span class=\"highlightClass\"><span style=\"color: blue;\">Blue text</span></span></p>\n`;\n\n      const rootView = renderHtml(content);\n      scrub(rootView);\n\n      expect(rootView.type).toBe(View);\n      expect(rootView.props.children.length).toBe(2);\n\n      const p = rootView.props.children[1];\n      expect(p.props.element.tag).toBe('p');\n\n      const span = p.props.children;\n      expect(span.props.element.tag).toBe('span');\n      expect(span.props.style).toEqual([\n        {\n          backgroundColor: '#ffff00',\n        },\n      ]);\n    });\n\n    it('Should wrap a string child of a block element', () => {\n      const content = `\n<p>Text block</p>\n`;\n\n      const rootView = renderHtml(content);\n      scrub(rootView);\n\n      expect(rootView.type).toBe(View);\n\n      const p = rootView.props.children;\n      expect(p.props.element.tag).toBe('p');\n\n      const text = p.props.children;\n      expect(text.type).toBe(Text);\n\n      const string = text.props.children;\n      expect(string).toBe('Text block');\n    });\n\n    it('Should wrap mixed inline child elements', () => {\n      const content = `\n<p>Text block<span>and more</span></p>\n`;\n\n      const rootView = renderHtml(content);\n      scrub(rootView);\n\n      expect(rootView.type).toBe(View);\n\n      const p = rootView.props.children;\n      expect(p.props.element.tag).toBe('p');\n\n      const text = p.props.children;\n      expect(text.type).toBe(Text);\n\n      const string = text.props.children[0];\n      expect(string).toBe('Text block');\n\n      const span = text.props.children[1];\n      expect(span.props.element.tag).toBe('span');\n      expect(span.props.children).toBe('and more');\n    });\n\n    it('Should render a PDF with custom font without errors', async () => {\n      const fonts = path.resolve(__dirname, 'fonts');\n\n      Font.clear();\n      Font.register({\n        family: 'Open Sans',\n        fonts: [\n          { src: fonts + '/Open_Sans/OpenSans-Regular.ttf' },\n          { src: fonts + '/Open_Sans/OpenSans-Bold.ttf', fontWeight: 'bold' },\n          {\n            src: fonts + '/Open_Sans/OpenSans-Italic.ttf',\n            fontStyle: 'italic',\n          },\n          {\n            src: fonts + '/Open_Sans/OpenSans-BoldItalic.ttf',\n            fontWeight: 'bold',\n            fontStyle: 'italic',\n          },\n        ],\n      });\n\n      await Font.load({ fontFamily: 'Open Sans' });\n\n      const content = `<html>\n  <style>\n    body {\n      font-family: 'Open Sans';\n    }\n  </style>\n  <body>\n    <p>\n        Paragraph with <strong>bold</strong>, <i>italic</i>, <u>underline</u> and <s>strikethrough</s>\n        <img src=\"https://images.unsplash.com/photo-1485546246426-74dc88dec4d9?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2069&q=80\" />\n    </p>\n    <ul>\n        <li>\n          First level\n          <ul><li>Second level</li></ul>\n        </li>\n    </ul>\n  </body>\n</html>`;\n\n      const rootView = renderHtml(content);\n      expect(rootView.type).toBe(View);\n\n      const html = rootView.props.children;\n      expect(html.type).toBe(renderPassThrough);\n      expect(html.props.children.length).toBe(2);\n\n      const style = html.props.children[0];\n      expect(style.type).toBe(renderNoop);\n      expect(style.props.element.tag).toBe('style');\n\n      const body = html.props.children[1];\n      expect(body.type).toBe(renderBlock);\n      expect(body.props.element.tag).toBe('body');\n      expect(body.props.children.length).toBe(2);\n\n      const p = body.props.children[0];\n      expect(p.type).toBe(renderBlock);\n      expect(p.props.element.tag).toBe('p');\n      expect(p.props.children.length).toBe(2);\n\n      const pText = p.props.children[0];\n      expect(pText.type).toBe(Text);\n      expect(pText.props.children.length).toBe(8);\n\n      const image = p.props.children[1];\n      expect(image.type).toBe(renderers.img);\n      expect(image.props.element.tag).toBe('img');\n\n      const ul = body.props.children[1];\n      expect(ul.type).toBe(renderBlock);\n      expect(ul.props.element.tag).toBe('ul');\n\n      const li = ul.props.children;\n      expect(li.props.children.length).toBe(2);\n\n      // pText.props.children.forEach((child: any) => {\n      //   if (typeof child === 'string') {\n      //     console.log(`\"${child}\"`);\n      //   } else {\n      //     console.log(child.props?.element?.tag, child.type);\n      //   }\n      // });\n\n      const document = (\n        <Document>\n          <Page size=\"LETTER\">\n            <>{rootView}</>\n          </Page>\n        </Document>\n      );\n\n      const pdfString = await renderToString(document);\n      // console.log(pdfString);\n    });\n  });\n\n  it('Should render a PDF with an svg without errors', async () => {\n    const content = `<html>\n      <body>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"500\" height=\"300\">\n          <defs>\n            <linearGradient id=\"linearGrad\" x1=\"0%\" y1=\"50%\" x2=\"100%\" y2=\"50%\">\n              <stop offset=\"0%\" stop-color=\"red\" stop-opacity=\"1\" />\n              <stop offset=\"100%\" style=\"stop-color:yellow;stop-opacity:1\" />\n            </linearGradient>\n\n            <radialGradient id=\"radialGrad\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n              <stop offset=\"0%\" style=\"stop-color:orange;stop-opacity:1\" />\n              <stop offset=\"100%\" style=\"stop-color:blue;stop-opacity:1\" />\n            </radialGradient>\n\n            <clipPath id=\"starClip\">\n              <polygon points=\"100,10 40,198 190,78 10,78 160,198\" />\n            </clipPath> \n          </defs>\n\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#linearGrad)\" />\n\n          <line x1=\"30\" y1=\"80\" x2=\"200\" y2=\"250\" stroke=\"black\" stroke-width=\"3\" />\n          <polyline points=\"220,50 280,80 250,150 300,200\" fill=\"none\" stroke=\"green\" stroke-width=\"3\" />\n          <polygon points=\"320,80 340,140 400,120\" fill=\"url(#radialGrad)\" /> \n          <path d=\"M420,50 C480,80 450,200 400,240\" stroke=\"purple\" stroke-width=\"4\" fill=\"none\"/>\n\n          <rect x=\"230\" y=\"160\" width=\"60\" height=\"30\" fill=\"lightblue\" stroke=\"black\" />\n          <circle cx=\"360\" cy=\"220\" r=\"20\" fill=\"pink\" />\n          <ellipse cx=\"430\" cy=\"260\" rx=\"30\" ry=\"15\" fill=\"brown\" />\n\n          <text x=\"60\" y=\"60\" font-size=\"24\">SVG Shapes</text>\n          <text x=\"90\" y=\"120\">\n            <tspan>Multiline</tspan>\n            <tspan x=\"90\" dy=\"20\">Text</tspan> \n          </text>\n\n          <g clip-path=\"url(#starClip)\">\n            <circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"#f0f\" stroke=\"black\" stroke-width=\"3\" />\n          </g>\n        </svg>\n      </body>\n    </html>`;\n\n    const rootView = renderHtml(content);\n    expect(rootView.type).toBe(View);\n\n    const html = rootView.props.children;\n    expect(html.type).toBe(renderPassThrough);\n\n    const body = html.props.children;\n    expect(body.type).toBe(renderBlock);\n    expect(body.props.element.tag).toBe('body');\n\n    const svg = body.props.children;\n    expect(svg.props.element.tag).toBe('svg');\n    expect(svg.props.element.attributes).toStrictEqual({\n      height: '300',\n      width: '500',\n      xmlns: 'http://www.w3.org/2000/svg',\n    });\n\n    const defs = svg.props.children[0];\n    expect(defs.props.element.tag).toBe('defs');\n    expect(defs.props.element.attributes).toStrictEqual({});\n\n    const linearGradient = defs.props.children[0];\n    expect(linearGradient.props.element.tag).toBe('lineargradient');\n    expect(linearGradient.props.element.attributes).toStrictEqual({\n      id: 'linearGrad',\n      x1: '0%',\n      x2: '100%',\n      y1: '50%',\n      y2: '50%',\n    });\n\n    const lStop1 = linearGradient.props.children[0];\n    expect(lStop1.props.element.tag).toBe('stop');\n    expect(lStop1.props.element.attributes).toStrictEqual({\n      offset: '0%',\n      'stop-color': 'red',\n      'stop-opacity': '1',\n    });\n\n    const lStop2 = linearGradient.props.children[1];\n    expect(lStop2.props.element.tag).toBe('stop');\n    expect(lStop2.props.element.attributes).toStrictEqual({\n      offset: '100%',\n      style: 'stop-color:yellow;stop-opacity:1',\n    });\n\n    const radialGradient = defs.props.children[2];\n    expect(radialGradient.props.element.tag).toBe('radialgradient');\n\n    const rStop1 = radialGradient.props.children[0];\n    expect(rStop1.props.element.tag).toBe('stop');\n\n    const rStop2 = radialGradient.props.children[1];\n    expect(rStop2.props.element.tag).toBe('stop');\n\n    const clipPath = defs.props.children[4];\n    expect(clipPath.props.element.tag).toBe('clippath');\n    const polygonClip = clipPath.props.children;\n    expect(polygonClip.props.element.tag).toBe('polygon');\n\n    const rect = svg.props.children[1];\n    expect(rect.props.element.tag).toBe('rect');\n    const line = svg.props.children[2];\n    expect(line.props.element.tag).toBe('line');\n    const polyline = svg.props.children[3];\n    expect(polyline.props.element.tag).toBe('polyline');\n    const polygon = svg.props.children[4];\n    expect(polygon.props.element.tag).toBe('polygon');\n    const path = svg.props.children[5];\n    expect(path.props.element.tag).toBe('path');\n    const rect2 = svg.props.children[6];\n    expect(rect2.props.element.tag).toBe('rect');\n    const circle = svg.props.children[7];\n    expect(circle.props.element.tag).toBe('circle');\n    const ellipse = svg.props.children[8];\n    expect(ellipse.props.element.tag).toBe('ellipse');\n    const text = svg.props.children[9];\n    expect(text.props.element.tag).toBe('text');\n\n    const textMulti = svg.props.children[10];\n    expect(textMulti.props.element.tag).toBe('text');\n    const tspan1 = textMulti.props.children[0];\n    expect(tspan1.props.element.tag).toBe('tspan');\n    const tspan2 = textMulti.props.children[1];\n    expect(tspan2.props.element.tag).toBe('tspan');\n\n    const g = svg.props.children[11];\n    expect(g.props.element.tag).toBe('g');\n    const gCircle = g.props.children;\n    expect(gCircle.props.element.tag).toBe('circle');\n\n    const document = (\n      <Document>\n        <Page size=\"LETTER\">\n          <>{rootView}</>\n        </Page>\n      </Document>\n    );\n\n    const pdfString = await renderToString(document);\n  });\n});\n"]}